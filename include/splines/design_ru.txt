Общие вещи
	Низкоуровневая библиотека
		Эффективность - нет виртуальных функций, нет лишних проверок
	Независимая библиотека
		Используется только стандартный С++ (языковые конструкции и библиотека STL)
	Обобщенная библиотека
		Можно использовать для любых типов, поддерживающих нужные (используемые) операции

Функциональность
	Сегмент
		Непрерывное отображение [0..1] -> V^n
	Сплайн - набор сегментов
		Удовлетворяет некоторому критерию непрерывности (по умолчанию - непрерывность, при желании - произвольных пользовательский критерий - например непрерывность до K-производной (Cn) или геометрическая непрерывность (Gn))
	Билдеры
		Реализуют построение сплайна по набору опорных точек в соответствии с заданной стратегией (bezier, catmull-rom, b-spline)
		Позволяют перестраивать сплайн, меняя опорные точки (добавлять, удалять, менять положение опорных точек)
	Параметризация по длине (arclength parametrization)
		Пересчет между параметром сплайна от 0..N (0..1 в пределах сегмента) и параметром сплайна, соответсвующему длине сплайна (0..L)
		Реализация - численное адаптивное интегрирование либо адаптивная аппроксимация ломаной
		Для того чтобы не вычислять в реальном времени можно использовать нерегулярную таблицу
	Локализация (localization)
		Поиск точки сплайна, ближайшей к заданной точке (+ расстояние до слайна), bounding сегментов и сплайна, пересечение с отрезком в 2d
		Для оптимизации массовых запросов можно строить сетку или дерево bounding volume'ов для сплайна

Особенности реализации
	Использование декоротаров времени компиляции
		Пользователь библиотеки использует сплайн с той и только той функциональностью, которая ему нужна
		Позволяет добавлять нужную функциональность, не перегружая базовых определений ('не платим за то, чего не используем')
		Позволяет при необходимости добавить свою специфическую функциональность
		Позволяет легко присваиваить и копировать между базовым вариантом и вариантом с добавочной функциональностью и наоборот
		Чем лучше обычного наследования?
		  - При обычном наследовании возникает комбинаторный взрыв типов
		  - При обычном наследовании не получиться заменить класс сегмента
		  - При обычном наследовании возникнут сложности с преобразованиями между типами сплайнов (или появится виртуальное наследование)
	Использование макроопределений TE (TEmplate) ME (MEmber)
		Позволяет сократить и упростить запись реализации, делая ее более читаемой
		Упрощается изменение параметров шаблона - изменение происходит в двух местах: определении класса и определении макросов TE и ME
